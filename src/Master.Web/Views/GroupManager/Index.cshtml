@using Master.Matches
@using Master.Prizes;
@using Microsoft.EntityFrameworkCore;
@model List<Master.Prizes.PrizeGroup>
@{
    ViewData["Title"] = "Index";
    var matchInstance = ViewData["matchInstance"] as MatchInstance;
}


<div class="layui-fluid" id="LAY-app-message">
    <div class="layui-card">
        <div class="layui-card-header bold"><i class="layui-icon layui-icon-next"></i> @L("项目审批")</div>
        <div class="layui-card-body">
            <form class="layui-form-pane" onsubmit="return doSearch();" id="app">
				<div class="layui-form-item" style="width:1200px">
					<div class="layui-inline">
						<label class="layui-form-label">@L("项目名称")</label>
						<div class="layui-input-inline">
							<input type="text" id="projectName" name="projectName" autocomplete="off" class="layui-input">
						</div>
					</div>
                    <div class="layui-inline">
                        <label class="layui-form-label">@L("奖项大类")</label>
                        <div class="layui-input-inline">
                            <select name="prizeId" lay-filter="PrizeId">
                                <option value="">--选择奖项大类--</option>
                                <option v-for="item in prizes" :value="item.id">{{item.prizeName}}</option>
                            </select>
                            
                           @* <input type="text" id="prizeName" name="prizeName" autocomplete="off" class="layui-input">*@
                        </div>
                    </div>
					<div class="layui-inline">
						<label class="layui-form-label">所属单位</label>
						<div cyType="dropDownTool" cyProps="url:'/api/services/app/Organization/GetTreeJson?maxlevel=2',search:'false',checkbox:'false',key_name:'briefName'"
							 name="OrganizationId" value="" class="layui-input-inline" style="position:relative">
						</div>
					</div>
					
					
				</div>
                <div class="layui-form-item" pane style="width:1200px">
                    <label class="layui-form-label">@L("申报奖项")</label>
                    <div class="layui-input-block">
                        <vc:prize-group-view prize-groups="Model" match-instance="matchInstance"></vc:prize-group-view>

                    </div>
                    <button style="position:absolute;top:0px;left:1220px;" class="layui-btn layui-btn-primary" type="button" onclick="doSearch()">@L("查询")</button>
                </div>
            </form>



            <table autoevent="1" id="Project" lay-filter="Project" class="layui-table " lay-data="{cellMinWidth:'80',height:'full-200', toolbar:'#toolbar',url:'/api/services/app/Project/GetPageResult',where:{where:'matchInstanceId=@matchInstance.Id and projectStatus=3 and projectsource=1'}, page:true,limit:30, id:'Project', skin: 'row', even: true,done:config.onTableDone,initSort:{field:'Id',type:'desc'}}">
                <thead>
                    <tr>
                        <th lay-data="{align:'center',type:'checkbox'}"></th>
                        <th lay-data="{align:'center',type:'numbers'}">@L("序号")</th>
                        <th lay-data="{align:'left',field:'projectName',templet:'#projectNameTpl',sort:true}">@L("项目名称")</th>
                       @* <th lay-data="{align:'center',field:'reportSN',sort:true}">@L("申报序号")</th>*@
                        <th lay-data="{align:'center',field:'prizeName',sort:true}">@L("奖项大类")</th>
                        <th lay-data="{align:'center',field:'subMajorName',sort:true}">@L("奖项子类")</th>
                        <th lay-data="{align:'center',field:'buildingType'}">@L("项目类别")</th>
                        <th lay-data="{align:'center',field:'designOrganizationName',sort:true}">@L("申报单位")</th>
                        @if (matchInstance.Match.Name != "科技进步奖评选")
                        {
                            <th lay-data="{align:'center',field:'isOriginal',templet:'#isOriginalTpl'}">@L("是否原创")</th>
                        }
                    </tr>
                </thead>
            </table>
        </div>

    </div>
</div>
<script type="text/html" id="projectNameTpl">
    <a href="#_" style="color:blue;text-decoration:underline;" onclick="showReport('{{d.id}}','{{d.prizeName}}')">{{d.projectName}}</a>
</script>
<script type="text/html" id="toolbar">
  <div class="layui-btn-container">
    <button class="layui-btn layui-btn-sm" lay-event="getCheckData">批量通过</button>
  </div>
</script>


@section scripts{
    <script>
        var app;
		config.ready = function () {
            layui.form.on('select(PrizeId)', function (data) {
                app.prizeId = data.value;
				});
            app = new Vue({
                el: '#app',
                data: {
                    prizeId: null,
                    prizes: []
                },
                methods: {
                    loadPrizes: function (matchInstanceId) {
                        abp.services.app.prize.getMatchInstancePrizes(matchInstanceId).done(function (data) {
                            console.log(data);
                            app.prizes = data;
                            refresh();
                        });
                    },

                },
                mounted: function () {
                    this.loadPrizes(@matchInstance.Id);
                    $("#app").removeClass("layui-hide");
                }
            });
			var table = layui.table;
			table.on('sort(Project)', function (obj) { //注：tool是工具条事件名，test是table原始容器的属性 lay-filter="对应的值"
				console.log(obj.field); //当前排序的字段名
				console.log(obj.type); //当前排序类型：desc（降序）、asc（升序）、null（空对象，默认排序）
				console.log(this); //当前排序的 th 对象

				//尽管我们的 table 自带排序功能，但并没有请求服务端。
				//有些时候，你可能需要根据当前排序的字段，重新向服务端发送请求，从而实现服务端排序，如：
				var orderField = obj.field;
				switch (obj.field) {
					case "prizeName":
						orderField = "Prize.PrizeName";
						break;
					case "subMajorName":
						orderField = "PrizeSubMajor.Major.DisplayName";
						break;
					case "designOrganizationName":
						orderField = "DesignOrganization.BriefName";
						break;
					case "creatorOrganizationName":
						orderField = "CreatorUser.Organization.BriefName";
						break;
					case "name":
						orderField = "CreatorUser.Name";
						break;

				}
				table.reload('Project', {
					initSort: obj //记录初始排序，如果不设的话，将无法标记表头的排序状态。 layui 2.1.1 新增参数
					, where: { //请求参数（注意：这里面的参数可任意定义，并非下面固定的格式）
						orderField: orderField //排序字段
						, orderType: obj.type //排序方式
					}
				});
			});
            table.on('toolbar(Project)',function(obj){
                var data = table.checkStatus(obj.config.id).data;
                if(data.length==0){
                    layer.msg("请先选择项目再进行操作", { icon: 5, anim: 6 });
                    return;
                }
                layer.confirm('确定对选中项目进行批量通过？', function (index) {
                    var ids=data.map(o=>o.id);
                    func.runAsync(abp.services.app.project.multiVerify(ids).done(function () {
                        top.layer.msg("@L("提交成功")");
                        doSearch();
                        layer.close(index);
                    }))
                });
            });
			$('div[cytype="dropDownTool"]').dropDownTool();
		}
        function doSearch() {
            var where = { where: 'matchInstanceId=@matchInstance.Id and projectStatus=3 and projectsource=1' };

            var projectName = $("#projectName").val();
            if (projectName) {
                where.where += ' and projectName.Contains(\"' + projectName + '\") ';
			}
            var prizeId = app.prizeId;
            if (prizeId) {
                where.where += ' and PrizeId='+prizeId;
            }
			var organizationId = $("input[name='OrganizationId']").val();
			if (organizationId) {
				where.where += " and DesignOrganizationId=" + organizationId;

			}
            var prizes = getCheckboxValue("prize");
            if (prizes.length > 0) {
                var tmpWhere = [];
                $.each(prizes, function (i, v) {
                    tmpWhere.push('PrizeId=' + v);
                });
                where.where += ' and (' + tmpWhere.join(' or ') + ')';
            }
            console.log(where);
            layui.table.reload('Project', {
                where: where
                ,page: {
                    curr: 1 //重新从第 1 页开始
                  }
            })

            return false;
        }

        //打开申报窗口
        function showReport(projectId,prizeName) {
            var title = "@(matchInstance.Match.Name+"("+matchInstance.Identifier+")")--" + prizeName;
            top.layer.open({
                type: 2,
                title: title,
                shadeClose: false,
                closeBtn:0,
                shade: 0.8,
                area: ['100%', '100%'],
                content: "/GroupManager/Verify?projectId=" + projectId,
                btn: ['关闭'],
                success: function (layero, index) {
                    //全屏弹窗
                    console.log(layero);
                    $(layero).append("<button class='layui-btn layui-btn-sm layui-btn-danger closeBtn' style='position: absolute;top: 8px;right: 15px; width: 80px;'>返回</button>").find(".closeBtn").click(function () {
                        top.layer.close(index);
                    });

                }
            })

        }
        function refresh() {
            Vue.nextTick(function () {
                $(".layui-form-switch,.layui-form-select").remove();
                $("form").addClass("layui-form");
                //$("#app").addClass("layui-form");//layui-form加载必须在vue加载之后，不然会出现下拉选项无法绑定数据
                layui.form.render();

            })
        }
    </script>
}

