@using Master.Web.Models.Select
@using Master.Reviews
@using Master.Majors
@model Review
@{
	Layout = "~/Views/Shared/_LayoutDialog.cshtml";
	ViewData["Title"] = "SelUser";
	var specialties = ViewBag.Specialities as List<Speciality>;
}


<div class="layui-fluid" id="LAY-app-message">
	<div class="layui-card">
		<div class="layui-card-body">
			<form class="layui-form layui-form-pane layui-hide" id="app">
				<input type="hidden" name="exclude" value="@ViewBag.Exclude" />
				<input type="hidden" name="all" value="@ViewBag.AllExpertIds" />
				<div class="layui-form-item">
					<div class="layui-inline">
						<label class="layui-form-label">姓名</label>
						<div class="layui-input-inline">
							<input type="text" id="name" name="name" autocomplete="off" class="layui-input">
						</div>
					</div>
					<div class="layui-inline">
						<label class="layui-form-label">专业</label>
						<div class="layui-input-inline">
							<select name="specialityId">
								<option value="">--请选择--</option>
								@foreach (var speciality in specialties.OrderBy(o=>o.Sort))
								{
									<option value="@speciality.Id">@speciality.Name</option>
								}
							</select>
						</div>
					</div>
					<div class="layui-inline">
						<label class="layui-form-label">回避情况</label>
						<div class="layui-input-inline" style="width:300px">
							<input type="checkbox" name="isexclude" lay-skin="primary" value="1" title="已选择">
							<input type="checkbox" name="isinclude" lay-skin="primary" value="1" title="未选择">
						</div>
					</div>
					<button class="layui-btn layui-btn-primary" type="button" lay-submit="" lay-filter="selexpert">@L("查询")</button>
					<button type="button" class="layui-btn  layui-btn-normal" onclick="parent.layer.closeAll('iframe');">@L("确定")</button>
				</div>
				<div class="layui-form-item layui-hide">
					<div class="layui-inline">
						<label class="layui-form-label">专业大类</label>
						<div class="layui-input-inline">
							<select name="majorId" lay-filter="MajorId">
								<option value="">--选择专业大类--</option>
								<option v-for="(item,index) in mainMajors" :value="item.id">{{item.briefName}}</option>
							</select>
						</div>
					</div>
					<div class="layui-inline">
						<label class="layui-form-label">专业小类</label>
						<div class="layui-input-inline">
							<select name="subMajorId">
								<option value="">--选择专业小类--</option>
								<option v-for="(item,index) in subMajors" :value="item.id">{{item.briefName}}</option>
							</select>
						</div>
						<button class="layui-btn layui-btn-primary" type="button" lay-submit="" lay-filter="selexpert">@L("查询")</button>
						<button type="button" class="layui-btn  layui-btn-normal" onclick="parent.layer.closeAll('iframe');">@L("确定")</button>
					</div>
				</div>
			</form>


			<table autoevent="1" id="User" lay-filter="User" class="layui-table " lay-data="{cellMinWidth:'80', url:'/api/services/app/User/GetExperts',where:{matchInstanceId:@Model.MatchInstanceId,all:'@ViewBag.AllExpertIds'}, page:false, id:'User',done:config.onTableDone,initSort:{field:'Name',type:'asc'}}">
				<thead>
					<tr>
						<th lay-data="{align:'center',templet:'#checkTpl',field:'id',width:'60',fixed:'left'}">选择</th>
						<th lay-data="{align:'center',field:'name',minWidth:'150'}">@L("姓名")</th>
						<th lay-data="{align:'left',field:'',templet:'#specialityTpl',width:'30%'}">@L("专业等级")</th>
						<th lay-data="{align:'center',field:'organizationDisplayName',minWidth:'150'}">@L("所属单位")</th>
						<th lay-data="{align:'center',field:'remarks',minWidth:'200'}">@L("备注")</th>
					</tr>
				</thead>
			</table>
		</div>

	</div>
</div>
@section scripts{
	<script type="text/html" id="checkTpl">
		<input type="checkbox" lay-skin="primary" value="{{d.id}}" lay-filter="selectcheck" class="mycheck">
	</script>
	<script type="text/html" id="majorTpl">
		{{#  layui.each(d.majorExperts, function(index, item){ }}
		{{#  if(item.rank === 1){ }}
		<span class="layui-badge layui-bg-gray" title="{{item.majorName}}(高级)">{{item.majorName}}</span>
		{{# }else{}}
		<span class="layui-badge" title="{{item.majorName}}(资深)">{{item.majorName}}</span>
		{{#  } }}

		{{#  }); }}
	</script>
	<script type="text/html" id="specialityTpl">
		{{#  layui.each(d.specialities, function(index, item){ }}
		<span class="layui-badge " title="{{item}}">{{item}}</span>
		{{#  }); }}
	</script>
	<script>
        var app;
        config.ready = function () {
            var element = layui.element,
                table = layui.table;
            layui.form.on('submit(selexpert)', function (obj) {
                console.log(obj);
                layui.table.reload('User', {
                    where: $.extend({isinclude:null,isexclude:null,matchInstanceId:@Model.MatchInstanceId,all:'@ViewBag.AllExpertIds'},obj.field)

                })
            });
            layui.form.on('select(MajorId)', function (data) {
                var majorId = data.value;
                app.loadSubMajors(majorId);
            });
            layui.form.on('checkbox(selectcheck)', function (data) {
                var expertId = data.value;

                if (data.elem.checked) {
                    putExcludeId(expertId);
                } else {
                    removeExcludeId(expertId);
                }
            });
            table.on('sort(User)', function (obj) { //注：tool是工具条事件名，test是table原始容器的属性 lay-filter="对应的值"
                //console.log(obj.field); //当前排序的字段名
                //console.log(obj.type); //当前排序类型：desc（降序）、asc（升序）、null（空对象，默认排序）
                //console.log(this); //当前排序的 th 对象

                //尽管我们的 table 自带排序功能，但并没有请求服务端。
                //有些时候，你可能需要根据当前排序的字段，重新向服务端发送请求，从而实现服务端排序，如：
                table.reload('User', {
                    initSort: obj //记录初始排序，如果不设的话，将无法标记表头的排序状态。 layui 2.1.1 新增参数
                    , where: { //请求参数（注意：这里面的参数可任意定义，并非下面固定的格式）
                        orderfield: obj.field,
                        ordertype: obj.type
                    }
                });
            });
            app = new Vue({
                el: '#app',
                data: {
                    item: {},
                    allMajors: [],
                    mainMajors: [],
                    subMajors: []
                },
                methods: {
                    loadMajors: function (matchInstanceId) {
                        abp.services.app.major.getTreeJson(null, matchInstanceId).done(function (data) {
                            console.log(data);
                            app.allMajors = data.filter(function (o) { return o.isActive; });
                            app.mainMajors = app.allMajors.filter(function (o) { return o.parentId == null; });
                            app.subMajors = [];
                            refresh();
                        });
                    },
                    loadSubMajors: function (majorId) {
                        app.subMajors = app.allMajors.filter(function (o) { return o.parentId == majorId; });
                        refresh();
                    }

                },
                mounted: function () {
                    this.loadMajors(@Model.MatchInstanceId);
                    $("#app").removeClass("layui-hide");
                }
            });
            config.refresh();


        };
        function getExcludeIdArr() {
            var exclude = $("input[name='exclude']").val();
            var excludeIds = [];
            if (exclude) {
                excludeIds = exclude.split(',');
            }

            return excludeIds;
        }
        config.onTableDone = function () {
            var excludeIds = getExcludeIdArr();
            //设置复选框选中状态
            $(".mycheck").each(function () {
                var expertId = $(this).val();
                if (excludeIds.indexOf(expertId) >= 0) {
                    $(this).prop("checked", true);
                }
            });
            layui.form.render();
        };
        //将专家加入到回避列表
        function putExcludeId(expertId) {
            var arr = getExcludeIdArr();
            if (arr.indexOf(expertId) < 0) {
                arr.push(expertId);
                $("input[name='exclude']").val(arr.join(','));
                //更新父窗口
                parent.updateProjectExcludeExperts(arr);
            }
        }
        //将专家从回避列表移除
        function removeExcludeId(expertId) {
            var arr = getExcludeIdArr();
            var index = arr.indexOf(expertId);
            if (index>= 0) {
                arr.splice(index, 1);
                $("input[name='exclude']").val(arr.join(','));
                //更新父窗口
                parent.updateProjectExcludeExperts(arr);
            }
        }
        config.refresh = function () {

        };
        function refresh() {
            Vue.nextTick(function () {
                $(".layui-form-switch,.layui-form-select").remove();
                //$("#app").addClass("layui-form");//layui-form加载必须在vue加载之后，不然会出现下拉选项无法绑定数据
                layui.form.render();

            })
        }
	</script>
}

