@using Master.Web.Components
@using Master.Matches
@{
    Layout = "~/Views/Shared/_LayoutDialog.cshtml";
    ViewData["Title"] = "Add";

    var matches = ViewData["matches"] as List<Match>;
}
<div>
    <form class="layui-form layui-form-pane layui-hide" id="app">
        <div class="layui-form-item">
            <div class="layui-inline">
                <label class="layui-form-label">赛事</label>
                <div class="layui-input-block">
                    <select name="MatchId" asp-items="@(new SelectList(matches,"Id","Name"))" lay-filter="MatchId" lay-verify="required" v-model="currentItem.matchId">
                        <option value="">--请选择赛事--</option>
                    </select>
                </div>
            </div>
            <div class="layui-inline">
                <label class="layui-form-label">@L("专业大类")</label>
                <div class="layui-input-inline">
                    <select name="MajorId" lay-filter="MajorId" v-model="currentItem.majorId" lay-verify="required">
                        <option value="">--选择专业大类--</option>
                        <option v-for="(item,index) in mainMajors" :value="item.id">{{item.briefName}}</option>
                    </select>
                </div>
            </div>
            <div class="layui-inline">
                <label class="layui-form-label">@L("专业小类")</label>
                <div class="layui-input-inline">
                    <select name="SubMajorId" v-model="currentItem.subMajorId" lay-filter="SubMajorId">
                        <option value="">--选择专业小类--</option>
                        <option v-for="(item,index) in subMajors" :value="item.id">{{item.briefName}}</option>
                    </select>
                </div>
            </div>
        </div>
        <div class="layui-form-item">
            <button class="layui-btn" type="button" @@click="addFile">@L("新建样例下载")</button>
        </div>

        <table class="layui-table">
            <colgroup>
                <col width="80">
                <col width="300">
                <col width="200">
                <col  />
                <col />
                <col />
            </colgroup>
            <thead>
                <tr>
                    <th>排序</th>
                    <th>样例描述</th>
                    <th>位置</th>
                    <th>样例文件</th>
                    <th>操作</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="(item,index) in currentItem.datas" :data="item">
                    <td><input type="text" v-model="item.sort" class="layui-input" style="width:30px" @@blur="resortFile" /></td>
                    <td><input type="text" v-model="item.description" class="layui-input" lay-verify="required" /></td>
                    <td><select v-model="item.fileLocation" lay-filter="FileLocation" lay-verify="required"><option value="">--请选择--</option><option value="1">数据填写区域</option><option value="2">附件上传区域</option></select></td>
                    <td>
                        <button class="layui-btn upload layui-btn-xs" type="button" :id="'upload'+index">上传</button>
                        <a v-if="item.filePath" :href="item.filePath" style="color:blue;text-decoration:underline" @@click.prevent="showPDF(item)">{{item.fileName}}</a>
                    </td>
                    <td><button type="button" class="layui-btn layui-btn-danger layui-btn-sm" @@click="removeFile(index)">删除</button></td>
                </tr>
            </tbody>
        </table>
        <div class="layui-form-item" style="display:none">
            <div class="layui-input-block">
                <button class="layui-btn" type="button" lay-submit="" lay-filter="Submit" id="Submit">@L("提交")</button>
            </div>
        </div>
    </form>
</div>

@section scripts{
    <script>
        var app;
        config.ready = function () {
            layui.form.on('select(MatchId)', function (data) {
                var matchId = data.value;
                app.currentItem.matchId = matchId;
                app.currentItem.majorId = "";
                app.currentItem.subMajorId = "";
                app.subMajors = [];
                app.loadMajors(matchId);
            });
            layui.form.on('select(MajorId)', function (data) {
                var majorId = data.value;
                app.currentItem.majorId = majorId;
                app.loadSubMajors(majorId);
            });
            layui.form.on('select(SubMajorId)', function (data) {
                var subMajorId = data.value;
                app.currentItem.subMajorId = subMajorId;
            });
            layui.form.on('select(FileLocation)', function (data) {
                var index = $(data.elem).closest("tr").index();
                app.currentItem.datas[index].fileLocation = data.value;
            });
            layui.form.on('submit', function () {
                if (app.currentItem.datas.length == 0) {
                    layer.msg('请至少录入一条记录', { icon: 5, anim: 6 });
                    return false;
                }
                for (var i = 0; i < app.currentItem.datas.length; i++) {
                    if (!app.currentItem.datas[i].filePath) {
                        layer.msg('请上传样例文件', { icon: 5, anim: 6 });
                        return false;
                    }
                }
                func.runAsync(abp.services.app.matchResource.submitMatchResourceDownloadList(app.currentItem).done(function () {
                    parent.layer.msg("@L("提交成功")");
                    parent.layer.closeAll("iframe");
                    parent.func.reload("DownloadList");
                    parent.config.refresh();

                }))

            });
            app = new Vue({
                el: '#app',
                data: {
                    item: {},
                    currentItem: {id:0, matchId: "", majorId: "", subMajorId: "", datas: [], matchResourceStatus:1,matchResourceType:3},
                    allMajors:[],
                    mainMajors: [],
                    subMajors: []
                },
                methods: {
                    loadItem: function (id) {
                        if (id) {
                            abp.services.app.matchResource.getMatchResource(id).done(function (data) {
                                app.currentItem = data;
                                app.loadMajors(data.matchId, data.majorId);
                            })
                        }

                    },
                    loadMajors: function (matchId,majorId) {
                        abp.services.app.major.getTreeJson(matchId).done(function (data) {
                            console.log(data);
                            app.allMajors = data.filter(function (o) { return o.isActive; });
                            app.mainMajors = app.allMajors.filter(function (o) { return o.parentId == null; });
                            if (majorId) {
                                app.loadSubMajors(majorId);

                            }
                            refresh();
                        });
                    },
                    loadSubMajors: function (majorId) {
                        app.subMajors = app.allMajors.filter(function (o) { return o.parentId == majorId; });
                        refresh();
                    },
                    addFile: function () {
                        this.currentItem.datas.push({ sort: this.currentItem.datas.length+1, fileLocation: 1,filePath:"",fileName:""});
                        refresh();
                    },
                    removeFile: function (index) {
                        abp.message.confirm('确认删除此项?', function () {
                            app.currentItem.datas.splice(index, 1);
                            app.resortFile();
                        });
                    },
                    resortFile: function () {
                        this.currentItem.datas = this.currentItem.datas.sort(function (a, b) { return a.sort > b.sort; });
                        for (var i = 0; i < this.currentItem.datas.length; i++) {
                            this.currentItem.datas[i].sort = i + 1;
                        }
                        refresh();
                    },
                    showPDF: function (item) {
                        top.layer.open({
                            type:2,
                            title: item.fileName,
                            shadeClose: false,
                            shade: 0.8,
                            area: ['100%', '100%'],
                            content: item.filePath
                        });

                    }
                },
                mounted: function () {
                    var id = $.getUrlParam("data");
                    this.loadItem(id);
                    layui.form.render();
                    $("#app").removeClass("layui-hide");
                }
            });
        }
        function refresh() {
            Vue.nextTick(function () {
                $(".layui-form-switch,.layui-form-select").remove();
                //$("#app").addClass("layui-form");//layui-form加载必须在vue加载之后，不然会出现下拉选项无法绑定数据
                layui.form.render();
                $("button.upload:not(.rendered)").each(function () {
                    var id = $(this).attr("id");
                    layui.upload.render({
                    elem: '#'+id,
                    accept: 'file',
                    acceptMime: 'application/pdf',
                    exts: 'PDF',
                    field:'file'
                    , url: '/file/upload?isfromadmin=true'
                    , before: function (obj) {
                        loadLayerIndex = top.layer.msg('@L("正在上传")...', {
                            icon: 16
                            , shade: 0.01, time: 0
                        });
                    }
                    , done: function (res) {
                        top.layer.close(loadLayerIndex);
                        //如果上传失败
                        if (!res.result.success) {
                            layer.msg(res.result.msg, { icon: 5, anim: 6 });
                        }
                        //上传成功
                        else {
                            var itemIndex = this.item.closest("tr").index();
                            app.currentItem.datas[itemIndex].filePath = res.result.filePath;
                            app.currentItem.datas[itemIndex].fileName = res.result.fileName;
                            //$('input[name=]').val(res.result.fileid);

                        }
                    }
                    , error: function () {

                    }
                    })
                    $(this).addClass("rendered");
                })

            })
        }
        function submit() {
            app.currentItem.matchResourceStatus = 1;//草稿
            $("#Submit").click();
        }
        function submit2() {
            app.currentItem.matchResourceStatus = 2;//发布
            $("#Submit").click();

        }
    </script>
}